<configuration>

    <springProperty scope="context" name="ACCESS_KEY_ID" source="dreamweb.aliyun_accesskeyid"/>
    <springProperty scope="context" name="ACCESS_KEY_SECRET" source="dreamweb.aliyun_accesskeysecret"/>


    <!--为了防止进程退出时，内存中的数据丢失，请加上此选项-->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <appender name="loghubAppender1" class="com.aliyun.openservices.log.logback.LoghubAppender">

        <!--必选项-->
        <!-- 账号及网络配置 -->
        <endpoint>cn-hangzhou.log.aliyuncs.com</endpoint>
        <accessKeyId>${ACCESS_KEY_ID}</accessKeyId>
        <accessKeySecret>${ACCESS_KEY_SECRET}</accessKeySecret>

        <!-- sls 项目配置 -->
        <project>application1-dreamweb</project>
        <logStore>dreamweb-backend-log</logStore>
        <!--必选项 (end)-->

        <!-- 可选项 -->
        <topic>dreamweb topic</topic>
        <source>dreamweb source</source>

        <!-- 可选项 详见 '参数说明'-->
        <totalSizeInBytes>104857600</totalSizeInBytes>
        <maxBlockMs>0</maxBlockMs>
        <ioThreadCount>8</ioThreadCount>
        <batchSizeThresholdInBytes>524288</batchSizeThresholdInBytes>
        <batchCountThreshold>4096</batchCountThreshold>
        <lingerMs>2000</lingerMs>
        <retries>10</retries>
        <baseRetryBackoffMs>100</baseRetryBackoffMs>
        <maxRetryBackoffMs>50000</maxRetryBackoffMs>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter"><!-- 打印INFO,WARN,ERROR级别的日志 -->
            <level>INFO</level>
        </filter>

<!--        <mdcFields>THREAD_ID,MDC_KEY</mdcFields>-->
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder
            by default -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg %X{THREAD_ID} %n</pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter"><!-- 打印INFO,WARN,ERROR级别的日志 -->
            <level>INFO</level>
        </filter>
    </appender>

<!--    &lt;!&ndash; 可用来获取StatusManager中的状态 &ndash;&gt;-->
    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>

<!--    &lt;!&ndash; 解决debug模式下循环发送的问题 &ndash;&gt;-->
    <logger name="org.apache.http.impl.conn.Wire" level="WARN"/>

    <root>
        <level value="DEBUG"/>
        <appender-ref ref="loghubAppender1"/>
<!--        <appender-ref ref="loghubAppender2"/>-->
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>
